(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return s}));var a=t(3),r=t(8),c=(t(0),t(95)),l={id:"usage",title:"Usage",sidebar_label:"Usage"},o={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Config search places",source:"@site/docs/user-usage.md",slug:"/usage",permalink:"/usage",editUrl:"https://github.com/kamilkisiela/graphql-config/edit/master/website/docs/user-usage.md",version:"current",sidebar_label:"Usage",sidebar:"docs",previous:{title:"Installation",permalink:"/installation"},next:{title:"Specifying schema",permalink:"/schema"}},i=[{value:"Config search places",id:"config-search-places",children:[]},{value:"Schema",id:"schema",children:[]},{value:"Documents",id:"documents",children:[]},{value:"Include / Exclude",id:"include--exclude",children:[]},{value:"Extensions",id:"extensions",children:[]},{value:"Projects",id:"projects",children:[]}],p={toc:i};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"config-search-places"},"Config search places"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.json")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.js")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.ts")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.toml")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.yaml")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"graphql.config.yml"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc")," ",Object(c.b)("em",{parentName:"p"},"(YAML and JSON)"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.json"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.toml"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.yaml"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.yml"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.js"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},".graphqlrc.ts"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"graphql")," property in ",Object(c.b)("inlineCode",{parentName:"p"},"package.json")))),Object(c.b)("h2",{id:"schema"},"Schema"),Object(c.b)("p",null,"The simplest config specifies only ",Object(c.b)("inlineCode",{parentName:"p"},"schema")," which points to the source of GraphQL Schema."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"schema: ./schema.graphql\n")),Object(c.b)("p",null,"Based on the above example you may think GraphQL Config accepts only single graphql files, but it does more than that."),Object(c.b)("p",null,"To learn more about possible sources of GraphQL schema read the ",Object(c.b)("a",{parentName:"p",href:"/schema"},'"Specifying schema" chapter'),"."),Object(c.b)("h2",{id:"documents"},"Documents"),Object(c.b)("p",null,"Another piece of GraphQL may be operations and fragments. In GraphQL Config we call them ",Object(c.b)("inlineCode",{parentName:"p"},"documents"),"."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"...\ndocuments: src/components/**/*.graphql\n")),Object(c.b)("p",null,"By default, GraphQL Config is able to find and extract documents from graphql files but if you want to extend it with JavaScript and TypeScript files (also tsx and jsx) please read the ",Object(c.b)("a",{parentName:"p",href:"/documents"},'"Specifying documents" chapter'),"."),Object(c.b)("h2",{id:"include--exclude"},"Include / Exclude"),Object(c.b)("p",null,"When you want to point out files related to the schema--for instance, React components--and make your IDE GraphQL Extension recognize those files, you can ",Object(c.b)("inlineCode",{parentName:"p"},"include")," and ",Object(c.b)("inlineCode",{parentName:"p"},"exlude")," items:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"...\ninclude: src/components/**/*.jsx\nexclude: src/components/__ignored__/**/*.jsx\n")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Remember that all files specified in ",Object(c.b)("inlineCode",{parentName:"p"},"schema")," or ",Object(c.b)("inlineCode",{parentName:"p"},"documents")," are included by default.")),Object(c.b)("h2",{id:"extensions"},"Extensions"),Object(c.b)("p",null,"In order to pass information to GraphQL Config's consumers (like IDE extensions, Node libraries), you can use an ",Object(c.b)("inlineCode",{parentName:"p"},"extensions")," section that is a key-value object."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"schema: './schema/*.graphql'\nextensions:\n  codegen:\n    generates:\n      ./src/types.ts:\n        plugins:\n          - typescript\n          - typescript-resolvers\n")),Object(c.b)("p",null,"Now ",Object(c.b)("a",{parentName:"p",href:"https://graphql-code-generator.com/"},"GraphQL Code Generator")," is able to consume that data. "),Object(c.b)("h2",{id:"projects"},"Projects"),Object(c.b)("p",null,"GraphQL Config allows you to define multiple projects within the same config file."),Object(c.b)("p",null,"Consider, for instance, writing the following configuration:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"schema: './schema.graphql'\ndocuments: './src/components/**/*.graphql'\n")),Object(c.b)("p",null,"This basically creates a singular, default project. In order to extend configuration to multiple projects, you can use the following approach:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"projects:\n  foo: \n    schema: './packages/foo/schema.graphql'\n    documents: './packages/foo/src/components/**/*.graphql'\n  bar:\n    schema: './packages/bar/schema.graphql'\n")),Object(c.b)("p",null,"It's also possible to define many projects where one is the default. You can simply add ",Object(c.b)("inlineCode",{parentName:"p"},"default")," as that project's name:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-yaml"},"projects:\n  default: \n    schema: './packages/foo/schema.graphql'\n    documents: './packages/foo/src/components/**/*.graphql'\n  bar:\n    schema: './packages/bar/schema.graphql'\n")))}s.isMDXComponent=!0},95:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},b=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=s(t),u=a,d=b["".concat(l,".").concat(u)]||b[u]||m[u]||c;return t?r.a.createElement(d,o(o({ref:n},p),{},{components:t})):r.a.createElement(d,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,l=new Array(c);l[0]=u;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<c;p++)l[p]=t[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);